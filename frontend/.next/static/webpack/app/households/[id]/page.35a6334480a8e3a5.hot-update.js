"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/households/[id]/page",{

/***/ "(app-pages-browser)/./src/lib/mock-api-data.ts":
/*!**********************************!*\
  !*** ./src/lib/mock-api-data.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMockActivity: function() { return /* binding */ getMockActivity; },\n/* harmony export */   getMockAllocation: function() { return /* binding */ getMockAllocation; },\n/* harmony export */   getMockCash: function() { return /* binding */ getMockCash; },\n/* harmony export */   getMockOverview: function() { return /* binding */ getMockOverview; },\n/* harmony export */   getMockPerformance: function() { return /* binding */ getMockPerformance; },\n/* harmony export */   getMockPlanning: function() { return /* binding */ getMockPlanning; },\n/* harmony export */   getMockPositions: function() { return /* binding */ getMockPositions; },\n/* harmony export */   getMockReports: function() { return /* binding */ getMockReports; }\n/* harmony export */ });\n/* harmony import */ var _mock_households__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mock-households */ \"(app-pages-browser)/./src/lib/mock-households.ts\");\n\n// Helper function to generate consistent random data based on household ID\nfunction seededRandom(seed) {\n    let multiplier = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n    let hash = 0;\n    for(let i = 0; i < seed.length; i++){\n        const char = seed.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash) % 100 * multiplier;\n}\n// Generate performance data points for charts\nfunction generatePerformanceData(householdId, range) {\n    const household = (0,_mock_households__WEBPACK_IMPORTED_MODULE_0__.getHouseholdById)(householdId);\n    if (!household) return [];\n    const points = range === \"1Y\" ? 252 : range === \"6M\" ? 126 : 63; // Trading days\n    const baseValue = household.totalAssets;\n    const performanceMultiplier = household.ytdPerformance / 100;\n    const data = [];\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - points);\n    for(let i = 0; i < points; i++){\n        const date = new Date(startDate);\n        date.setDate(date.getDate() + i);\n        // Generate trend with some volatility\n        const trend = i / points * performanceMultiplier;\n        const volatility = (seededRandom(householdId + i.toString()) - 50) / 500;\n        const value = baseValue * (1 + trend + volatility);\n        const benchmark = baseValue * (1 + trend * 0.8 + volatility * 0.5); // Benchmark slightly lower\n        data.push({\n            date: date.toISOString().split(\"T\")[0],\n            value: Math.round(value),\n            benchmark: Math.round(benchmark)\n        });\n    }\n    return data;\n}\n// Generate activity feed\nfunction generateActivityData(householdId) {\n    const household = (0,_mock_households__WEBPACK_IMPORTED_MODULE_0__.getHouseholdById)(householdId);\n    if (!household) return [];\n    const activityTypes = [\n        \"meeting\",\n        \"call\",\n        \"email\",\n        \"review\",\n        \"trade\"\n    ];\n    const priorities = [\n        \"high\",\n        \"medium\",\n        \"low\"\n    ];\n    const statuses = [\n        \"completed\",\n        \"pending\",\n        \"scheduled\"\n    ];\n    const activities = [];\n    const seed = seededRandom(householdId);\n    for(let i = 0; i < 10; i++){\n        const type = activityTypes[Math.floor((seed + i * 7) % activityTypes.length)];\n        const priority = priorities[Math.floor((seed + i * 3) % priorities.length)];\n        const status = statuses[Math.floor((seed + i * 5) % statuses.length)];\n        const date = new Date();\n        date.setDate(date.getDate() - i);\n        activities.push({\n            id: \"\".concat(householdId, \"-\").concat(i),\n            type,\n            priority,\n            status,\n            date: date.toISOString(),\n            title: \"\".concat(type, \" - \").concat(household.name),\n            description: \"\".concat(type, \" activity for \").concat(household.name),\n            tags: [\n                household.riskProfile.toLowerCase(),\n                type\n            ],\n            author: household.advisorName\n        });\n    }\n    return activities;\n}\n// Generate positions data\nfunction generatePositionsData(householdId) {\n    const household = (0,_mock_households__WEBPACK_IMPORTED_MODULE_0__.getHouseholdById)(householdId);\n    if (!household) return [];\n    const securities = [\n        {\n            symbol: \"AAPL\",\n            name: \"Apple Inc.\",\n            type: \"Equity\"\n        },\n        {\n            symbol: \"MSFT\",\n            name: \"Microsoft Corporation\",\n            type: \"Equity\"\n        },\n        {\n            symbol: \"GOOGL\",\n            name: \"Alphabet Inc.\",\n            type: \"Equity\"\n        },\n        {\n            symbol: \"BND\",\n            name: \"Vanguard Total Bond Market ETF\",\n            type: \"Fixed Income\"\n        },\n        {\n            symbol: \"VTI\",\n            name: \"Vanguard Total Stock Market ETF\",\n            type: \"Equity\"\n        },\n        {\n            symbol: \"VXUS\",\n            name: \"Vanguard Total International Stock ETF\",\n            type: \"International Equity\"\n        },\n        {\n            symbol: \"GLD\",\n            name: \"SPDR Gold Shares\",\n            type: \"Alternatives\"\n        },\n        {\n            symbol: \"REIT\",\n            name: \"Real Estate Investment Trust\",\n            type: \"Alternatives\"\n        }\n    ];\n    const positions = [];\n    const seed = seededRandom(householdId);\n    const totalValue = household.totalAssets - household.totalCash;\n    securities.forEach((security, i)=>{\n        if ((seed + i * 13) % 4 === 0) return; // Skip some positions randomly\n        const allocation = ((seed + i * 7) % 30 + 5) / 100; // 5-35% allocation\n        const marketValue = totalValue * allocation;\n        const shares = Math.floor(marketValue / (100 + (seed + i * 11) % 500));\n        const price = marketValue / shares;\n        const dayChange = ((seed + i * 5) % 10 - 5) / 100; // -5% to +5%\n        positions.push({\n            symbol: security.symbol,\n            name: security.name,\n            shares,\n            price,\n            marketValue,\n            dayChange,\n            dayChangePercent: dayChange,\n            type: security.type,\n            account: \"\".concat(household.householdType, \" Account \").concat(i % 3 + 1)\n        });\n    });\n    return positions.sort((a, b)=>b.marketValue - a.marketValue);\n}\n// Generate cash accounts\nfunction generateCashAccounts(householdId) {\n    const household = (0,_mock_households__WEBPACK_IMPORTED_MODULE_0__.getHouseholdById)(householdId);\n    if (!household) return [];\n    const accountTypes = [\n        \"Checking\",\n        \"Savings\",\n        \"Money Market\",\n        \"CD\"\n    ];\n    const accounts = [];\n    const seed = seededRandom(householdId);\n    accountTypes.forEach((type, i)=>{\n        if ((seed + i * 11) % 3 === 0 && type !== \"Checking\") return; // Always have checking\n        const balance = household.totalCash / accountTypes.length * (0.5 + (seed + i * 7) % 100 / 200);\n        const rate = type === \"CD\" ? 4.5 : type === \"Savings\" ? 2.1 : type === \"Money Market\" ? 3.2 : 0.1;\n        accounts.push({\n            id: \"\".concat(householdId, \"-\").concat(type.toLowerCase()),\n            name: \"\".concat(household.name, \" \").concat(type),\n            type,\n            balance,\n            interestRate: rate,\n            institution: [\n                \"Chase\",\n                \"Bank of America\",\n                \"Wells Fargo\",\n                \"Citibank\"\n            ][i % 4]\n        });\n    });\n    return accounts;\n}\n// Main mock data functions\nfunction getMockOverview(householdId) {\n    const household = (0,_mock_households__WEBPACK_IMPORTED_MODULE_0__.getHouseholdById)(householdId);\n    if (!household) throw new Error(\"Household not found\");\n    return {\n        household: {\n            id: household.id,\n            name: household.name,\n            primaryContact: household.primaryContact,\n            advisor: household.advisorName,\n            riskProfile: household.riskProfile\n        },\n        summary: {\n            totalAssets: household.totalAssets,\n            totalCash: household.totalCash,\n            accountsCount: household.accountsCount,\n            ytdReturn: household.ytdPerformance,\n            ytdReturnBenchmark: household.ytdPerformance * 0.9\n        }\n    };\n}\nfunction getMockPerformance(householdId, range) {\n    return {\n        range,\n        data: generatePerformanceData(householdId, range)\n    };\n}\nfunction getMockAllocation(householdId) {\n    const household = (0,_mock_households__WEBPACK_IMPORTED_MODULE_0__.getHouseholdById)(householdId);\n    if (!household) throw new Error(\"Household not found\");\n    const seed = seededRandom(householdId);\n    const riskMultiplier = household.riskProfile === \"Conservative\" ? 0.7 : household.riskProfile === \"Aggressive\" ? 1.3 : 1.0;\n    const baseEquity = Math.min(70, Math.max(30, 50 * riskMultiplier + (seed % 20 - 10)));\n    const equity = Math.round(baseEquity);\n    const international = Math.round((seed % 15 + 10) * riskMultiplier);\n    const fixedIncome = Math.round(Math.max(10, 60 - equity - international));\n    const alternatives = Math.round(Math.max(0, 100 - equity - international - fixedIncome - 5));\n    const cash = 100 - equity - international - fixedIncome - alternatives;\n    return {\n        categories: [\n            {\n                name: \"US Equity\",\n                value: equity,\n                color: \"#0f766e\"\n            },\n            {\n                name: \"International Equity\",\n                value: international,\n                color: \"#3b82f6\"\n            },\n            {\n                name: \"Fixed Income\",\n                value: fixedIncome,\n                color: \"#10b981\"\n            },\n            {\n                name: \"Alternatives\",\n                value: alternatives,\n                color: \"#f59e0b\"\n            },\n            {\n                name: \"Cash\",\n                value: cash,\n                color: \"#ef4444\"\n            }\n        ]\n    };\n}\nfunction getMockActivity(householdId) {\n    return {\n        activities: generateActivityData(householdId)\n    };\n}\nfunction getMockCash(householdId) {\n    const household = (0,_mock_households__WEBPACK_IMPORTED_MODULE_0__.getHouseholdById)(householdId);\n    if (!household) throw new Error(\"Household not found\");\n    return {\n        totalCash: household.totalCash,\n        accounts: generateCashAccounts(householdId)\n    };\n}\nfunction getMockPlanning(householdId) {\n    const household = (0,_mock_households__WEBPACK_IMPORTED_MODULE_0__.getHouseholdById)(householdId);\n    if (!household) throw new Error(\"Household not found\");\n    const seed = seededRandom(householdId);\n    const isRetirement = household.name.includes(\"Retirement\") || household.riskProfile === \"Conservative\";\n    return {\n        goals: [\n            {\n                id: \"\".concat(householdId, \"-retirement\"),\n                name: \"Retirement Planning\",\n                target: household.totalAssets * 1.5,\n                current: household.totalAssets,\n                targetDate: \"2035-12-31\",\n                onTrack: household.ytdPerformance > 6\n            },\n            {\n                id: \"\".concat(householdId, \"-education\"),\n                name: \"Education Funding\",\n                target: 500000,\n                current: household.totalAssets * 0.1,\n                targetDate: \"2030-08-31\",\n                onTrack: true\n            }\n        ],\n        rmds: isRetirement ? [\n            {\n                account: \"Traditional IRA\",\n                requiredAmount: household.totalAssets * 0.04,\n                dueDate: \"2025-12-31\",\n                completed: false\n            }\n        ] : [],\n        beneficiaries: [\n            {\n                name: household.primaryContact.split(\" \")[0] + \" Jr.\",\n                relationship: \"Child\",\n                percentage: 60,\n                contingent: false\n            },\n            {\n                name: \"Spouse\",\n                relationship: \"Spouse\",\n                percentage: 40,\n                contingent: false\n            }\n        ]\n    };\n}\nfunction getMockPositions(householdId) {\n    return {\n        positions: generatePositionsData(householdId)\n    };\n}\nfunction getMockReports(householdId) {\n    const household = (0,_mock_households__WEBPACK_IMPORTED_MODULE_0__.getHouseholdById)(householdId);\n    if (!household) throw new Error(\"Household not found\");\n    return {\n        available: [\n            {\n                id: \"portfolio-performance\",\n                name: \"Portfolio Performance Summary\",\n                description: \"Comprehensive analysis of portfolio returns, asset allocation, and performance metrics\",\n                category: \"Performance\",\n                lastGenerated: \"2025-09-24\",\n                status: \"Ready\",\n                size: \"2.3 MB\"\n            },\n            {\n                id: \"tax-loss-harvesting\",\n                name: \"Tax Loss Harvesting Report\",\n                description: \"Analysis of realized and unrealized gains/losses for tax optimization\",\n                category: \"Tax\",\n                lastGenerated: \"2025-09-19\",\n                status: \"Ready\",\n                size: \"1.8 MB\"\n            },\n            {\n                id: \"asset-allocation\",\n                name: \"Asset Allocation Analysis\",\n                description: \"Current vs target allocation with rebalancing recommendations\",\n                category: \"Allocation\",\n                lastGenerated: \"2025-09-23\",\n                status: \"Ready\",\n                size: \"1.5 MB\"\n            }\n        ],\n        summary: {\n            totalReports: 12,\n            readyToDownload: 8,\n            inProgress: 2,\n            thisMonth: 6\n        }\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/mock-api-data.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/queries.ts":
/*!****************************!*\
  !*** ./src/lib/queries.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queryKeys: function() { return /* binding */ queryKeys; },\n/* harmony export */   useActivity: function() { return /* binding */ useActivity; },\n/* harmony export */   useAllocation: function() { return /* binding */ useAllocation; },\n/* harmony export */   useCash: function() { return /* binding */ useCash; },\n/* harmony export */   useOverview: function() { return /* binding */ useOverview; },\n/* harmony export */   usePerformance: function() { return /* binding */ usePerformance; },\n/* harmony export */   usePlanning: function() { return /* binding */ usePlanning; },\n/* harmony export */   usePositions: function() { return /* binding */ usePositions; },\n/* harmony export */   useReports: function() { return /* binding */ useReports; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n/* harmony import */ var _lib_mock_api_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/mock-api-data */ \"(app-pages-browser)/./src/lib/mock-api-data.ts\");\n\n\n// Mock fetch function that returns household-specific data\nasync function fetchMockData(householdId, dataType, range) {\n    // Simulate network delay\n    await new Promise((resolve)=>setTimeout(resolve, 100 + Math.random() * 200));\n    switch(dataType){\n        case \"overview\":\n            return (0,_lib_mock_api_data__WEBPACK_IMPORTED_MODULE_0__.getMockOverview)(householdId);\n        case \"performance\":\n            return (0,_lib_mock_api_data__WEBPACK_IMPORTED_MODULE_0__.getMockPerformance)(householdId, range || \"6M\");\n        case \"allocation\":\n            return (0,_lib_mock_api_data__WEBPACK_IMPORTED_MODULE_0__.getMockAllocation)(householdId);\n        case \"activity\":\n            return (0,_lib_mock_api_data__WEBPACK_IMPORTED_MODULE_0__.getMockActivity)(householdId);\n        case \"cash\":\n            return (0,_lib_mock_api_data__WEBPACK_IMPORTED_MODULE_0__.getMockCash)(householdId);\n        case \"planning\":\n            return (0,_lib_mock_api_data__WEBPACK_IMPORTED_MODULE_0__.getMockPlanning)(householdId);\n        case \"positions\":\n            return (0,_lib_mock_api_data__WEBPACK_IMPORTED_MODULE_0__.getMockPositions)(householdId);\n        case \"reports\":\n            return (0,_lib_mock_api_data__WEBPACK_IMPORTED_MODULE_0__.getMockReports)(householdId);\n        default:\n            throw new Error(\"Unknown data type: \".concat(dataType));\n    }\n}\n// Query keys factory\nconst queryKeys = {\n    household: (id)=>[\n            \"household\",\n            id\n        ],\n    overview: (id)=>[\n            \"household\",\n            id,\n            \"overview\"\n        ],\n    performance: (id, range)=>[\n            \"household\",\n            id,\n            \"performance\",\n            range\n        ],\n    allocation: (id)=>[\n            \"household\",\n            id,\n            \"allocation\"\n        ],\n    activity: (id, limit, offset)=>[\n            \"household\",\n            id,\n            \"activity\",\n            {\n                limit,\n                offset\n            }\n        ],\n    cash: (id)=>[\n            \"household\",\n            id,\n            \"cash\"\n        ],\n    planning: (id)=>[\n            \"household\",\n            id,\n            \"planning\"\n        ],\n    positions: (id)=>[\n            \"household\",\n            id,\n            \"positions\"\n        ],\n    reports: (id)=>[\n            \"household\",\n            id,\n            \"reports\"\n        ]\n};\n// Hooks\nfunction useOverview(householdId, options) {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.overview(householdId),\n        queryFn: ()=>fetchAPI(\"/api/households/\".concat(householdId, \"/overview\"), OverviewResponseSchema),\n        staleTime: 5 * 60 * 1000,\n        ...options\n    });\n}\nfunction usePerformance(householdId) {\n    let range = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"6M\", options = arguments.length > 2 ? arguments[2] : void 0;\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.performance(householdId, range),\n        queryFn: ()=>fetchAPI(\"/api/households/\".concat(householdId, \"/performance?range=\").concat(range), PerformanceResponseSchema),\n        staleTime: 10 * 60 * 1000,\n        ...options\n    });\n}\nfunction useAllocation(householdId, options) {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.allocation(householdId),\n        queryFn: ()=>fetchAPI(\"/api/households/\".concat(householdId, \"/allocation\"), AllocationResponseSchema),\n        staleTime: 15 * 60 * 1000,\n        ...options\n    });\n}\nfunction useActivity(householdId) {\n    let limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10, offset = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, options = arguments.length > 3 ? arguments[3] : void 0;\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.activity(householdId, limit, offset),\n        queryFn: ()=>fetchAPI(\"/api/households/\".concat(householdId, \"/activity?limit=\").concat(limit, \"&offset=\").concat(offset), ActivityResponseSchema),\n        staleTime: 2 * 60 * 1000,\n        ...options\n    });\n}\nfunction useCash(householdId, options) {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.cash(householdId),\n        queryFn: ()=>fetchAPI(\"/api/households/\".concat(householdId, \"/cash\"), CashResponseSchema),\n        staleTime: 10 * 60 * 1000,\n        ...options\n    });\n}\nfunction usePlanning(householdId, options) {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.planning(householdId),\n        queryFn: ()=>fetchAPI(\"/api/households/\".concat(householdId, \"/planning\"), PlanningResponseSchema),\n        staleTime: 30 * 60 * 1000,\n        ...options\n    });\n}\nfunction usePositions(householdId, options) {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.positions(householdId),\n        queryFn: ()=>fetchAPI(\"/api/households/\".concat(householdId, \"/positions\"), PositionsResponseSchema),\n        staleTime: 5 * 60 * 1000,\n        ...options\n    });\n}\nfunction useReports(householdId, options) {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.reports(householdId),\n        queryFn: ()=>fetchAPI(\"/api/households/\".concat(householdId, \"/reports\"), ReportsResponseSchema),\n        staleTime: 60 * 60 * 1000,\n        ...options\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/queries.ts\n"));

/***/ })

});